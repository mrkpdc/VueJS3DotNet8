version: '3.4'
name: vuejs3_net8
services:
  vuejs3_net8_postgres:
    image: "postgres:16.1-alpine3.18"
    container_name: vuejs3_net8_postgres
    volumes:
      - vuejs3_net8_postgres_data:/var/lib/postgresql/data
      - ./var/database/postgres/AuthDB_Postgres.sql:/docker-entrypoint-initdb.d/AuthDB_Postgres.sql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=AuthDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  vuejs3_net8_be:
    image: vuejs3_net8_be
    container_name: vuejs3_net8_be
    build:
      context: ./be
      dockerfile: ./Dockerfile
    ports:
      - 5179:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__1__Name=File
      - Serilog__WriteTo__1__Args__path=Logs\\Logs.txt
      - Serilog__WriteTo__1__Args__outputTemplate={Timestamp} {Message}{NewLine:1}{Exception:1}
      - Serilog__WriteTo__1__Args__rollingInterval=Day
      - Serilog__WriteTo__2__Name=PostgreSQL
      - Serilog__WriteTo__2__Args__connectionString=Server=vuejs3_net8_postgres;Port=5432;Database=AuthDB;UserId=postgres;Password=postgres;
      - Serilog__WriteTo__2__Args__tableName=Logs
      - Serilog__WriteTo__2__Args__AutoCreateSqlTable=True      
      - ConnectionStrings__AuthDB_Postgres=Server=vuejs3_net8_postgres;Port=5432;Database=AuthDB;UserId=postgres;Password=postgres;
    links:
      - vuejs3_net8_postgres

  vuejs3_net8_fe:
    image: vuejs3_net8_fe
    container_name: vuejs3_net8_fe
    build:
      context: ./fe
      dockerfile: ./Dockerfile
    ports: 
      - 4200:80
    links:
      - vuejs3_net8_be

  vuejs3_net8_prometheus:
    image: prom/prometheus:v2.48.0
    container_name: vuejs3_net8_prometheus
    #ports:
    #  - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./var/monitoring/prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml:ro
      - vuejs3_net8_prometheus_data:/prometheus
    #restart: unless-stopped

  #questo è per le risorse dei containers in linux
  vuejs3_net8_cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0     
    container_name: vuejs3_net8_cadvisor
    #ports:
    #  - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    #restart: unless-stopped
  
  #questo è per le risorse di sistema in linux
  vuejs3_net8_node_exporter:
   image: quay.io/prometheus/node-exporter:v1.5.0
   container_name: vuejs3_net8_node_exporter
   command: "--path.rootfs=/host"
   pid: host
   #restart: unless-stopped
   volumes:
     - /:/host:ro,rslave

  vuejs3_net8_grafana:
    image: grafana/grafana-oss:10.2.2
    container_name: vuejs3_net8_grafana
    ports:
      - "3000:3000"
    volumes:
      - vuejs3_net8_grafana_data:/var/lib/grafana
    #restart: unless-stopped

volumes:
  vuejs3_net8_postgres_data:
    name: vuejs3_net8_postgres_data
    driver: local
  vuejs3_net8_prometheus_data:
    name: vuejs3_net8_prometheus_data
    driver: local
  vuejs3_net8_grafana_data:
    name: vuejs3_net8_grafana_data
    driver: local